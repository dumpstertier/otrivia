{"version":3,"sources":["Question.js","App.js","index.js"],"names":["Question","props","checkAnswer","bind","state","answers","isCorrect","answered","answer","this","question","correct_answer","setState","addScore","incorrect_answers","push","i","length","j","Math","floor","random","tmp","Grid","container","spacing","item","xs","map","index","sm","Button","variant","size","color","onClick","disabled","key","className","score","restart","nextQuestion","React","Component","App","handleChange","event","target","name","value","fetchData","category","difficulty","currentQuestion","questions","isError","preventDefault","apiUrl","fetch","then","res","json","result","results","error","console","log","Container","maxWidth","FormControl","InputLabel","htmlFor","Select","defaultValue","onChange","inputProps","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5b75b70.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport './Question.css';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.state = {\n      answers: [],\n      isCorrect: false,\n      answered: false\n    }\n  }\n\n  checkAnswer(answer) {\n    if (answer === this.props.question.correct_answer) {\n      this.setState({\n        isCorrect: true\n      });\n      this.props.addScore();\n    }\n\n    this.setState({\n      answered: true\n    });\n  }\n\n  componentDidMount() {\n    let answers = this.props.question.incorrect_answers;\n    answers.push(this.props.question.correct_answer);\n\n    for (let i = answers.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const tmp = answers[i];\n      answers[i] = answers[j];\n      answers[j] = tmp;\n    }\n\n    this.setState({\n      answers: answers\n    });\n  }\n\n  render() {\n    return(\n      <Grid container spacing={3}>\n        <Grid item xs={12}>{this.props.question.question}</Grid>\n        {this.state.answers.map((answer, index) =>\n          <Grid item sm={6} xs={12}>\n            <Button\n              variant=\"outlined\"\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={() => this.checkAnswer(answer)}\n              disabled={this.state.answered ? true : false}\n              key={index}\n              className={this.state.answered && answer === this.props.question.correct_answer ? \"AnswerButton green\" : this.state.answered && answer !== this.props.question.correct_answer ? \"AnswerButton red\" : \"AnswerButton\"}\n            >\n              {answer}\n            </Button>\n          </Grid>\n        )}\n        {this.props.index === 9 && this.state.answered ? (\n          <Grid item xs={12}>\n            <p>Total score: {this.props.score}</p>\n            <Button variant=\"outlined\" size=\"large\" color=\"primary\" onClick={this.props.restart}>Start again</Button>\n          </Grid>\n        ) : this.props.index !== 9 && this.state.answered ? (\n          <Grid item xs={12}>\n            <Button variant=\"outlined\" size=\"large\" color=\"primary\" onClick={this.props.nextQuestion}>Next question</Button>\n          </Grid>\n        ) : \"\"}\n      </Grid>\n    );\n  }\n}\n\nexport default Question;\n","import React from 'react';\nimport { Container, Grid, FormControl, InputLabel, Select, Button } from '@material-ui/core';\nimport Question from './Question';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchData = this.fetchData.bind(this);\n    this.restart = this.restart.bind(this);\n    this.addScore = this.addScore.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.state = {\n      category: '',\n      difficulty: '',\n      score: 0,\n      currentQuestion: 0,\n      questions: null,\n      isError: false\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  fetchData(event) {\n    event.preventDefault();\n    let apiUrl = \"https://opentdb.com/api.php?amount=10&category=\" + this.state.category + \"&difficulty=\" + this.state.difficulty;\n    fetch(apiUrl)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            questions: result.results\n          });\n        },\n        (error) => {\n          console.log(error);\n          this.setState({\n            isError: true\n          });\n        }\n      )\n  }\n\n  addScore() {\n    let score = this.state.score;\n    score++;\n    this.setState({\n      score: score\n    });\n  }\n\n  nextQuestion() {\n    let currentQuestion = this.state.currentQuestion;\n    currentQuestion++;\n    console.log(currentQuestion);\n    this.setState({\n      currentQuestion: currentQuestion\n    });\n  }\n\n  restart(event) {\n    event.preventDefault();\n    this.setState({\n      category: '',\n      difficulty: '',\n      score: 0,\n      questions: null,\n      currentQuestion: 0\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>OTrivia</h1>\n        </header>\n        <main>\n          {this.state.questions ? (\n            <Container maxWidth=\"sm\">\n              <Grid container spacing={4}>\n                <Grid item xs={12}>\n                  <p>{this.state.currentQuestion + 1}/10</p>\n                  <p>Current score: {this.state.score}</p>\n                </Grid>\n                {this.state.questions.map((question, index) =>\n                  <Grid\n                    item xs={12}\n                    key={index}\n                    className={this.state.currentQuestion === index ? \"Question current\" : \"Question\"}\n                  >\n                    <Question question={question} score={this.state.score} addScore={this.addScore} nextQuestion={this.nextQuestion} restart={this.restart} index={index} />\n                  </Grid>\n                )}\n              </Grid>\n            </Container>\n          ) : this.state.isError === true ? (\n            <Container maxWidth=\"sm\">\n              Error connecting to database.\n            </Container>\n          ) : (\n            <Container maxWidth=\"sm\">\n              <form>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <FormControl>\n                      <InputLabel htmlFor=\"category\">Category</InputLabel>\n                      <Select\n                        value={this.state.category}\n                        defaultValue='any'\n                        onChange={this.handleChange}\n                        inputProps={{\n                          name: 'category',\n                          id: 'category'\n                        }}\n                      >\n                        <option value={\"any\"}>Any Category</option>\n                        <option value={\"9\"}>General Knowledge</option>\n                        <option value={\"10\"}>Entertainment: Books</option>\n                        <option value={\"11\"}>Entertainment: Film</option>\n                        <option value={\"12\"}>Entertainment: Music</option>\n                        <option value={\"13\"}>Entertainment: Musicals &amp; Theatres</option>\n                        <option value={\"14\"}>Entertainment: Television</option>\n                        <option value={\"15\"}>Entertainment: Video Games</option>\n                        <option value={\"16\"}>Entertainment: Board Games</option>\n                        <option value={\"17\"}>Science &amp; Nature</option>\n                        <option value={\"18\"}>Science: Computers</option>\n                        <option value={\"19\"}>Science: Mathematics</option>\n                        <option value={\"20\"}>Mythology</option>\n                        <option value={\"21\"}>Sports</option>\n                        <option value={\"22\"}>Geography</option>\n                        <option value={\"23\"}>History</option>\n                        <option value={\"24\"}>Politics</option>\n                        <option value={\"25\"}>Art</option>\n                        <option value={\"26\"}>Celebrities</option>\n                        <option value={\"27\"}>Animals</option>\n                        <option value={\"28\"}>Vehicles</option>\n                        <option value={\"29\"}>Entertainment: Comics</option>\n                        <option value={\"30\"}>Science: Gadgets</option>\n                        <option value={\"31\"}>Entertainment: Japanese Anime &amp; Manga</option>\n                        <option value={\"32\"}>Entertainment: Cartoon &amp; Animations</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <FormControl>\n                      <InputLabel htmlFor=\"difficulty\">Difficulty</InputLabel>\n                      <Select\n                        value={this.state.difficulty}\n                        defaultValue='any'\n                        onChange={this.handleChange}\n                        inputProps={{\n                          name: 'difficulty',\n                          id: 'difficulty'\n                        }}\n                      >\n                        <option value={\"any\"}>Any Difficulty</option>\n                        <option value={\"easy\"}>Easy</option>\n                        <option value={\"medium\"}>Medium</option>\n                        <option value={\"hard\"}>Hard</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" size=\"large\" color=\"primary\" onClick={this.fetchData}>Start</Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Container>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}